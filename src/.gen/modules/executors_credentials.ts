// generated by cdktf get
// sourcegraph/executors/aws//modules/credentials
import { TerraformModule, TerraformModuleUserConfig } from 'cdktf';
import { Construct } from 'constructs';
export interface ExecutorsCredentialsConfig extends TerraformModuleUserConfig {
  /**
   * If not provided, there will be no permissions boundary on IAM roles and users created. The ARN of a policy to use for permissions boundaries with IAM roles and users.
   */
  readonly permissionsBoundaryArn?: string;
  /**
   * An optional prefix to add to all resources created.
   */
  readonly resourcePrefix?: string;
}
/**
 * Defines an ExecutorsCredentials based on a Terraform module
 *
 * Docs at Terraform Registry: {@link https://registry.terraform.io/modules/sourcegraph/executors/aws/~> 5.0.1/submodules/credentials sourcegraph/executors/aws//modules/credentials}
 */
export class ExecutorsCredentials extends TerraformModule {
  private readonly inputs: { [name: string]: any } = { }
  public constructor(scope: Construct, id: string, config: ExecutorsCredentialsConfig = {}) {
    super(scope, id, {
      ...config,
      source: 'sourcegraph/executors/aws//modules/credentials',
      version: '~> 5.0.1',
    });
    this.permissionsBoundaryArn = config.permissionsBoundaryArn;
    this.resourcePrefix = config.resourcePrefix;
  }
  public get permissionsBoundaryArn(): string | undefined {
    return this.inputs['permissions_boundary_arn'] as string | undefined;
  }
  public set permissionsBoundaryArn(value: string | undefined) {
    this.inputs['permissions_boundary_arn'] = value;
  }
  public get resourcePrefix(): string | undefined {
    return this.inputs['resource_prefix'] as string | undefined;
  }
  public set resourcePrefix(value: string | undefined) {
    this.inputs['resource_prefix'] = value;
  }
  public get metricWriterAccessKeyIdOutput() {
    return this.getString('metric_writer_access_key_id')
  }
  public get metricWriterSecretKeyOutput() {
    return this.getString('metric_writer_secret_key')
  }
  protected synthesizeAttributes() {
    return this.inputs;
  }
}
