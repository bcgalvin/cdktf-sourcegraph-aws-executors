// generated by cdktf get
// sourcegraph/executors/aws//modules/docker-mirror
import { TerraformModule, TerraformModuleUserConfig } from 'cdktf';
import { Construct } from 'constructs';
export interface ExecutorsDockerMirrorConfig extends TerraformModuleUserConfig {
  /**
   * If false, no public IP will be associated with the executors.
   * @default true
   */
  readonly assignPublicIp?: boolean;
  /**
   * Docker registry mirror node disk size in GB.
   * @default 32
   */
  readonly bootDiskSize?: number;
  /**
   * Persistent Docker registry mirror additional IOPS.
   * @default 3000
   */
  readonly diskIops?: number;
  /**
   * Persistent Docker registry mirror disk size in GB.
   * @default 64
   */
  readonly diskSize?: number;
  /**
   * Persistent Docker registry mirror disk throughput in MiB/s.
   * @default 125
   */
  readonly diskThroughput?: number;
  /**
   * If provided, the default security groups will not be created. The ID of the security group to associate the Docker Mirror network with.
   */
  readonly dockerMirrorAccessSecurityGroupId?: string;
  /**
   * CIDR range from where HTTP access to the Docker registry is acceptable.
   * @default 10.0.0.0/16
   */
  readonly httpAccessCidrRange?: string;
  /**
   * DEPRECATED: This is not used anymore.
   * @default 0.0.0.0/0
   */
  readonly httpMetricsAccessCidrRange?: string;
  /**
   * A label tag to add to all the machines; can be used for filtering out the right instances in stackdriver monitoring and in Prometheus instance discovery.
   */
  readonly instanceTagPrefix: string;
  /**
   * AMI for the EC2 instance to use. Must be in the same availability zone. Leave empty to use latest compatible with the Sourcegraph version.
   */
  readonly machineAmi?: string;
  /**
   * Docker registry mirror node machine type.
   * @default m5n.large
   */
  readonly machineType?: string;
  /**
   * If not provided, there will be no permissions boundary on IAM roles and users created. The ARN of a policy to use for permissions boundaries with IAM roles and users.
   */
  readonly permissionsBoundaryArn?: string;
  /**
   * Use randomized names for resources. Deployments using the legacy naming convention will be updated in-place with randomized names when enabled.
   */
  readonly randomizeResourceNames: boolean;
  /**
   * An optional prefix to add to all resources created.
   */
  readonly resourcePrefix?: string;
  /**
   * CIDR range from where SSH access to the EC2 instance is acceptable.
   * @default 10.0.0.0/16
   */
  readonly sshAccessCidrRange?: string;
  /**
   * The IP to statically assign to the instance. Should be internal.
   */
  readonly staticIp: string;
  /**
   * The ID of the subnet within the given VPC to run the instance in.
   */
  readonly subnetId: string;
  /**
   * The ID of the VPC to run the instance in.
   */
  readonly vpcId: string;
}
/**
 * Defines an ExecutorsDockerMirror based on a Terraform module
 *
 * Docs at Terraform Registry: {@link https://registry.terraform.io/modules/sourcegraph/executors/aws/~> 5.0.1/submodules/docker-mirror sourcegraph/executors/aws//modules/docker-mirror}
 */
export class ExecutorsDockerMirror extends TerraformModule {
  private readonly inputs: { [name: string]: any } = { }
  public constructor(scope: Construct, id: string, config: ExecutorsDockerMirrorConfig) {
    super(scope, id, {
      ...config,
      source: 'sourcegraph/executors/aws//modules/docker-mirror',
      version: '~> 5.0.1',
    });
    this.assignPublicIp = config.assignPublicIp;
    this.bootDiskSize = config.bootDiskSize;
    this.diskIops = config.diskIops;
    this.diskSize = config.diskSize;
    this.diskThroughput = config.diskThroughput;
    this.dockerMirrorAccessSecurityGroupId = config.dockerMirrorAccessSecurityGroupId;
    this.httpAccessCidrRange = config.httpAccessCidrRange;
    this.httpMetricsAccessCidrRange = config.httpMetricsAccessCidrRange;
    this.instanceTagPrefix = config.instanceTagPrefix;
    this.machineAmi = config.machineAmi;
    this.machineType = config.machineType;
    this.permissionsBoundaryArn = config.permissionsBoundaryArn;
    this.randomizeResourceNames = config.randomizeResourceNames;
    this.resourcePrefix = config.resourcePrefix;
    this.sshAccessCidrRange = config.sshAccessCidrRange;
    this.staticIp = config.staticIp;
    this.subnetId = config.subnetId;
    this.vpcId = config.vpcId;
  }
  public get assignPublicIp(): boolean | undefined {
    return this.inputs['assign_public_ip'] as boolean | undefined;
  }
  public set assignPublicIp(value: boolean | undefined) {
    this.inputs['assign_public_ip'] = value;
  }
  public get bootDiskSize(): number | undefined {
    return this.inputs['boot_disk_size'] as number | undefined;
  }
  public set bootDiskSize(value: number | undefined) {
    this.inputs['boot_disk_size'] = value;
  }
  public get diskIops(): number | undefined {
    return this.inputs['disk_iops'] as number | undefined;
  }
  public set diskIops(value: number | undefined) {
    this.inputs['disk_iops'] = value;
  }
  public get diskSize(): number | undefined {
    return this.inputs['disk_size'] as number | undefined;
  }
  public set diskSize(value: number | undefined) {
    this.inputs['disk_size'] = value;
  }
  public get diskThroughput(): number | undefined {
    return this.inputs['disk_throughput'] as number | undefined;
  }
  public set diskThroughput(value: number | undefined) {
    this.inputs['disk_throughput'] = value;
  }
  public get dockerMirrorAccessSecurityGroupId(): string | undefined {
    return this.inputs['docker_mirror_access_security_group_id'] as string | undefined;
  }
  public set dockerMirrorAccessSecurityGroupId(value: string | undefined) {
    this.inputs['docker_mirror_access_security_group_id'] = value;
  }
  public get httpAccessCidrRange(): string | undefined {
    return this.inputs['http_access_cidr_range'] as string | undefined;
  }
  public set httpAccessCidrRange(value: string | undefined) {
    this.inputs['http_access_cidr_range'] = value;
  }
  public get httpMetricsAccessCidrRange(): string | undefined {
    return this.inputs['http_metrics_access_cidr_range'] as string | undefined;
  }
  public set httpMetricsAccessCidrRange(value: string | undefined) {
    this.inputs['http_metrics_access_cidr_range'] = value;
  }
  public get instanceTagPrefix(): string {
    return this.inputs['instance_tag_prefix'] as string;
  }
  public set instanceTagPrefix(value: string) {
    this.inputs['instance_tag_prefix'] = value;
  }
  public get machineAmi(): string | undefined {
    return this.inputs['machine_ami'] as string | undefined;
  }
  public set machineAmi(value: string | undefined) {
    this.inputs['machine_ami'] = value;
  }
  public get machineType(): string | undefined {
    return this.inputs['machine_type'] as string | undefined;
  }
  public set machineType(value: string | undefined) {
    this.inputs['machine_type'] = value;
  }
  public get permissionsBoundaryArn(): string | undefined {
    return this.inputs['permissions_boundary_arn'] as string | undefined;
  }
  public set permissionsBoundaryArn(value: string | undefined) {
    this.inputs['permissions_boundary_arn'] = value;
  }
  public get randomizeResourceNames(): boolean {
    return this.inputs['randomize_resource_names'] as boolean;
  }
  public set randomizeResourceNames(value: boolean) {
    this.inputs['randomize_resource_names'] = value;
  }
  public get resourcePrefix(): string | undefined {
    return this.inputs['resource_prefix'] as string | undefined;
  }
  public set resourcePrefix(value: string | undefined) {
    this.inputs['resource_prefix'] = value;
  }
  public get sshAccessCidrRange(): string | undefined {
    return this.inputs['ssh_access_cidr_range'] as string | undefined;
  }
  public set sshAccessCidrRange(value: string | undefined) {
    this.inputs['ssh_access_cidr_range'] = value;
  }
  public get staticIp(): string {
    return this.inputs['static_ip'] as string;
  }
  public set staticIp(value: string) {
    this.inputs['static_ip'] = value;
  }
  public get subnetId(): string {
    return this.inputs['subnet_id'] as string;
  }
  public set subnetId(value: string) {
    this.inputs['subnet_id'] = value;
  }
  public get vpcId(): string {
    return this.inputs['vpc_id'] as string;
  }
  public set vpcId(value: string) {
    this.inputs['vpc_id'] = value;
  }
  protected synthesizeAttributes() {
    return this.inputs;
  }
}
