// generated by cdktf get
// sourcegraph/executors/aws
import { TerraformModule, TerraformModuleUserConfig } from 'cdktf';
import { Construct } from 'constructs';
export interface ExecutorsConfig extends TerraformModuleUserConfig {
  /**
   * The availability zone to create the instance in.
   */
  readonly availabilityZone: string;
  /**
   * Docker registry mirror node disk size in GB.
   * @default 64
   */
  readonly dockerMirrorBootDiskSize?: number;
  /**
   * Persistent Docker registry mirror additional IOPS.
   * @default 3000
   */
  readonly dockerMirrorDiskIops?: number;
  /**
   * DEPRECATED. This is not used anymore.
   * @default 10.0.0.0/16
   */
  readonly dockerMirrorHttpAccessCidrRange?: string;
  /**
   * AMI for the EC2 instance to use. Must be in the same availability zone. Leave empty to use latest compatible with the Sourcegraph version.
   */
  readonly dockerMirrorMachineAmi?: string;
  /**
   * Docker registry mirror node machine type.
   * @default m5.large
   */
  readonly dockerMirrorMachineType?: string;
  /**
   * CIDR range from where SSH access to the EC2 instance is acceptable.
   * @default 0.0.0.0/0
   */
  readonly dockerMirrorSshAccessCidrRange?: string;
  /**
   * The IP to statically assign to the instance. Should be internal.
   * @default 10.0.1.4
   */
  readonly dockerMirrorStaticIp?: string;
  /**
   * Executor node disk additional IOPS.
   * @default 3000
   */
  readonly executorBootDiskIops?: number;
  /**
   * Executor node disk size in GB
   * @default 100
   */
  readonly executorBootDiskSize?: number;
  /**
   * If provided, this docker auth config file will be used to authorize image pulls. See [Using private registries](https://docs.sourcegraph.com/admin/deploy_executors#using-private-registries) for how to configure.
   */
  readonly executorDockerAuthConfig?: string;
  /**
   * The amount of disk space to give to each firecracker VM
   * @default 20GB
   */
  readonly executorFirecrackerDiskSpace?: string;
  /**
   * The amount of memory to give to each firecracker VM
   * @default 12GB
   */
  readonly executorFirecrackerMemory?: string;
  /**
   * The number of CPUs to give to each firecracker VM
   * @default 4
   */
  readonly executorFirecrackerNumCpus?: number;
  /**
   * DEPRECATED. This is not used anymore.
   * @default 0.0.0.0/0
   */
  readonly executorHttpAccessCidrRange?: string;
  /**
   * A label tag to add to all the executors. Can be used for filtering out the right instances in stackdriver monitoring.
   */
  readonly executorInstanceTag: string;
  /**
   * The amount of memory to allocate to each virtual machine or container
   * @default 12GB
   */
  readonly executorJobMemory?: string;
  /**
   * The number of CPUs to allocate to each virtual machine or container
   * @default 4
   */
  readonly executorJobNumCpus?: number;
  /**
   * The amount of jobs a single instance should have in queue. Used for autoscaling.
   * @default 360
   */
  readonly executorJobsPerInstanceScaling?: number;
  /**
   * Executor node machine disk image to use for creating the boot volume. Leave empty to use latest compatible with the Sourcegraph version.
   */
  readonly executorMachineImage?: string;
  /**
   * Executor node machine type.
   * @default c5n.metal
   */
  readonly executorMachineType?: string;
  /**
   * The maximum time that can be spent by the worker dequeueing records to be handled
   * @default 2h
   */
  readonly executorMaxActiveTime?: string;
  /**
   * The maximum number of executor instances to run in the autoscaling group.
   * @default 1
   */
  readonly executorMaxReplicas?: number;
  /**
   * The number of jobs to run concurrently per executor instance
   * @default 18
   */
  readonly executorMaximumNumJobs?: number;
  /**
   * The maximum wall time that can be spent on a single job
   * @default 30m
   */
  readonly executorMaximumRuntimePerJob?: string;
  /**
   * The value for environment by which to filter the custom metrics.
   */
  readonly executorMetricsEnvironmentLabel: string;
  /**
   * The minimum number of executor instances to run in the autoscaling group.
   * @default 1
   */
  readonly executorMinReplicas?: number;
  /**
   * The maximum number of jobs that will be dequeued by the worker
   * @default 1800
   */
  readonly executorNumTotalJobs?: number;
  /**
   * Whether to use preemptible machines instead of standard machines; usually way cheaper but might be terminated at any time
   */
  readonly executorPreemptibleMachines?: boolean;
  /**
   * The queue from which the executor should dequeue jobs.
   */
  readonly executorQueueName: string;
  /**
   * An optional prefix to add to all resources created.
   */
  readonly executorResourcePrefix?: string;
  /**
   * The shared password used to authenticate requests to the internal executor proxy.
   */
  readonly executorSourcegraphExecutorProxyPassword: string;
  /**
   * The externally accessible URL of the target Sourcegraph instance.
   */
  readonly executorSourcegraphExternalUrl: string;
  /**
   * CIDR range from where SSH access to the EC2 instances is acceptable.
   * @default 0.0.0.0/0
   */
  readonly executorSshAccessCidrRange?: string;
  /**
   * Whether to isolate commands in virtual machines
   * @default true
   */
  readonly executorUseFirecracker?: boolean;
  /**
   * If not provided, there will be no permissions boundary on IAM roles and users created. The ARN of a policy to use for permissions boundaries with IAM roles and users.
   */
  readonly permissionsBoundaryArn?: string;
  /**
   * If true, the executors and docker mirror will live in a private subnet and communicate with the internet through NAT.
   */
  readonly privateNetworking?: boolean;
  /**
   * Use randomized names for resources. Deployments using the legacy naming convention will be updated in-place with randomized names when enabled.
   */
  readonly randomizeResourceNames?: boolean;
  /**
   * If provided, the default security groups will not be created. The ID of the security group to associate the Docker Mirror network and the Launch Template network with.
   */
  readonly securityGroupId?: string;
}
/**
 * Defines an Executors based on a Terraform module
 *
 * Docs at Terraform Registry: {@link https://registry.terraform.io/modules/sourcegraph/executors/aws/~> 5.0.1 sourcegraph/executors/aws}
 */
export class Executors extends TerraformModule {
  private readonly inputs: { [name: string]: any } = { }
  public constructor(scope: Construct, id: string, config: ExecutorsConfig) {
    super(scope, id, {
      ...config,
      source: 'sourcegraph/executors/aws',
      version: '~> 5.0.1',
    });
    this.availabilityZone = config.availabilityZone;
    this.dockerMirrorBootDiskSize = config.dockerMirrorBootDiskSize;
    this.dockerMirrorDiskIops = config.dockerMirrorDiskIops;
    this.dockerMirrorHttpAccessCidrRange = config.dockerMirrorHttpAccessCidrRange;
    this.dockerMirrorMachineAmi = config.dockerMirrorMachineAmi;
    this.dockerMirrorMachineType = config.dockerMirrorMachineType;
    this.dockerMirrorSshAccessCidrRange = config.dockerMirrorSshAccessCidrRange;
    this.dockerMirrorStaticIp = config.dockerMirrorStaticIp;
    this.executorBootDiskIops = config.executorBootDiskIops;
    this.executorBootDiskSize = config.executorBootDiskSize;
    this.executorDockerAuthConfig = config.executorDockerAuthConfig;
    this.executorFirecrackerDiskSpace = config.executorFirecrackerDiskSpace;
    this.executorFirecrackerMemory = config.executorFirecrackerMemory;
    this.executorFirecrackerNumCpus = config.executorFirecrackerNumCpus;
    this.executorHttpAccessCidrRange = config.executorHttpAccessCidrRange;
    this.executorInstanceTag = config.executorInstanceTag;
    this.executorJobMemory = config.executorJobMemory;
    this.executorJobNumCpus = config.executorJobNumCpus;
    this.executorJobsPerInstanceScaling = config.executorJobsPerInstanceScaling;
    this.executorMachineImage = config.executorMachineImage;
    this.executorMachineType = config.executorMachineType;
    this.executorMaxActiveTime = config.executorMaxActiveTime;
    this.executorMaxReplicas = config.executorMaxReplicas;
    this.executorMaximumNumJobs = config.executorMaximumNumJobs;
    this.executorMaximumRuntimePerJob = config.executorMaximumRuntimePerJob;
    this.executorMetricsEnvironmentLabel = config.executorMetricsEnvironmentLabel;
    this.executorMinReplicas = config.executorMinReplicas;
    this.executorNumTotalJobs = config.executorNumTotalJobs;
    this.executorPreemptibleMachines = config.executorPreemptibleMachines;
    this.executorQueueName = config.executorQueueName;
    this.executorResourcePrefix = config.executorResourcePrefix;
    this.executorSourcegraphExecutorProxyPassword = config.executorSourcegraphExecutorProxyPassword;
    this.executorSourcegraphExternalUrl = config.executorSourcegraphExternalUrl;
    this.executorSshAccessCidrRange = config.executorSshAccessCidrRange;
    this.executorUseFirecracker = config.executorUseFirecracker;
    this.permissionsBoundaryArn = config.permissionsBoundaryArn;
    this.privateNetworking = config.privateNetworking;
    this.randomizeResourceNames = config.randomizeResourceNames;
    this.securityGroupId = config.securityGroupId;
  }
  public get availabilityZone(): string {
    return this.inputs['availability_zone'] as string;
  }
  public set availabilityZone(value: string) {
    this.inputs['availability_zone'] = value;
  }
  public get dockerMirrorBootDiskSize(): number | undefined {
    return this.inputs['docker_mirror_boot_disk_size'] as number | undefined;
  }
  public set dockerMirrorBootDiskSize(value: number | undefined) {
    this.inputs['docker_mirror_boot_disk_size'] = value;
  }
  public get dockerMirrorDiskIops(): number | undefined {
    return this.inputs['docker_mirror_disk_iops'] as number | undefined;
  }
  public set dockerMirrorDiskIops(value: number | undefined) {
    this.inputs['docker_mirror_disk_iops'] = value;
  }
  public get dockerMirrorHttpAccessCidrRange(): string | undefined {
    return this.inputs['docker_mirror_http_access_cidr_range'] as string | undefined;
  }
  public set dockerMirrorHttpAccessCidrRange(value: string | undefined) {
    this.inputs['docker_mirror_http_access_cidr_range'] = value;
  }
  public get dockerMirrorMachineAmi(): string | undefined {
    return this.inputs['docker_mirror_machine_ami'] as string | undefined;
  }
  public set dockerMirrorMachineAmi(value: string | undefined) {
    this.inputs['docker_mirror_machine_ami'] = value;
  }
  public get dockerMirrorMachineType(): string | undefined {
    return this.inputs['docker_mirror_machine_type'] as string | undefined;
  }
  public set dockerMirrorMachineType(value: string | undefined) {
    this.inputs['docker_mirror_machine_type'] = value;
  }
  public get dockerMirrorSshAccessCidrRange(): string | undefined {
    return this.inputs['docker_mirror_ssh_access_cidr_range'] as string | undefined;
  }
  public set dockerMirrorSshAccessCidrRange(value: string | undefined) {
    this.inputs['docker_mirror_ssh_access_cidr_range'] = value;
  }
  public get dockerMirrorStaticIp(): string | undefined {
    return this.inputs['docker_mirror_static_ip'] as string | undefined;
  }
  public set dockerMirrorStaticIp(value: string | undefined) {
    this.inputs['docker_mirror_static_ip'] = value;
  }
  public get executorBootDiskIops(): number | undefined {
    return this.inputs['executor_boot_disk_iops'] as number | undefined;
  }
  public set executorBootDiskIops(value: number | undefined) {
    this.inputs['executor_boot_disk_iops'] = value;
  }
  public get executorBootDiskSize(): number | undefined {
    return this.inputs['executor_boot_disk_size'] as number | undefined;
  }
  public set executorBootDiskSize(value: number | undefined) {
    this.inputs['executor_boot_disk_size'] = value;
  }
  public get executorDockerAuthConfig(): string | undefined {
    return this.inputs['executor_docker_auth_config'] as string | undefined;
  }
  public set executorDockerAuthConfig(value: string | undefined) {
    this.inputs['executor_docker_auth_config'] = value;
  }
  public get executorFirecrackerDiskSpace(): string | undefined {
    return this.inputs['executor_firecracker_disk_space'] as string | undefined;
  }
  public set executorFirecrackerDiskSpace(value: string | undefined) {
    this.inputs['executor_firecracker_disk_space'] = value;
  }
  public get executorFirecrackerMemory(): string | undefined {
    return this.inputs['executor_firecracker_memory'] as string | undefined;
  }
  public set executorFirecrackerMemory(value: string | undefined) {
    this.inputs['executor_firecracker_memory'] = value;
  }
  public get executorFirecrackerNumCpus(): number | undefined {
    return this.inputs['executor_firecracker_num_cpus'] as number | undefined;
  }
  public set executorFirecrackerNumCpus(value: number | undefined) {
    this.inputs['executor_firecracker_num_cpus'] = value;
  }
  public get executorHttpAccessCidrRange(): string | undefined {
    return this.inputs['executor_http_access_cidr_range'] as string | undefined;
  }
  public set executorHttpAccessCidrRange(value: string | undefined) {
    this.inputs['executor_http_access_cidr_range'] = value;
  }
  public get executorInstanceTag(): string {
    return this.inputs['executor_instance_tag'] as string;
  }
  public set executorInstanceTag(value: string) {
    this.inputs['executor_instance_tag'] = value;
  }
  public get executorJobMemory(): string | undefined {
    return this.inputs['executor_job_memory'] as string | undefined;
  }
  public set executorJobMemory(value: string | undefined) {
    this.inputs['executor_job_memory'] = value;
  }
  public get executorJobNumCpus(): number | undefined {
    return this.inputs['executor_job_num_cpus'] as number | undefined;
  }
  public set executorJobNumCpus(value: number | undefined) {
    this.inputs['executor_job_num_cpus'] = value;
  }
  public get executorJobsPerInstanceScaling(): number | undefined {
    return this.inputs['executor_jobs_per_instance_scaling'] as number | undefined;
  }
  public set executorJobsPerInstanceScaling(value: number | undefined) {
    this.inputs['executor_jobs_per_instance_scaling'] = value;
  }
  public get executorMachineImage(): string | undefined {
    return this.inputs['executor_machine_image'] as string | undefined;
  }
  public set executorMachineImage(value: string | undefined) {
    this.inputs['executor_machine_image'] = value;
  }
  public get executorMachineType(): string | undefined {
    return this.inputs['executor_machine_type'] as string | undefined;
  }
  public set executorMachineType(value: string | undefined) {
    this.inputs['executor_machine_type'] = value;
  }
  public get executorMaxActiveTime(): string | undefined {
    return this.inputs['executor_max_active_time'] as string | undefined;
  }
  public set executorMaxActiveTime(value: string | undefined) {
    this.inputs['executor_max_active_time'] = value;
  }
  public get executorMaxReplicas(): number | undefined {
    return this.inputs['executor_max_replicas'] as number | undefined;
  }
  public set executorMaxReplicas(value: number | undefined) {
    this.inputs['executor_max_replicas'] = value;
  }
  public get executorMaximumNumJobs(): number | undefined {
    return this.inputs['executor_maximum_num_jobs'] as number | undefined;
  }
  public set executorMaximumNumJobs(value: number | undefined) {
    this.inputs['executor_maximum_num_jobs'] = value;
  }
  public get executorMaximumRuntimePerJob(): string | undefined {
    return this.inputs['executor_maximum_runtime_per_job'] as string | undefined;
  }
  public set executorMaximumRuntimePerJob(value: string | undefined) {
    this.inputs['executor_maximum_runtime_per_job'] = value;
  }
  public get executorMetricsEnvironmentLabel(): string {
    return this.inputs['executor_metrics_environment_label'] as string;
  }
  public set executorMetricsEnvironmentLabel(value: string) {
    this.inputs['executor_metrics_environment_label'] = value;
  }
  public get executorMinReplicas(): number | undefined {
    return this.inputs['executor_min_replicas'] as number | undefined;
  }
  public set executorMinReplicas(value: number | undefined) {
    this.inputs['executor_min_replicas'] = value;
  }
  public get executorNumTotalJobs(): number | undefined {
    return this.inputs['executor_num_total_jobs'] as number | undefined;
  }
  public set executorNumTotalJobs(value: number | undefined) {
    this.inputs['executor_num_total_jobs'] = value;
  }
  public get executorPreemptibleMachines(): boolean | undefined {
    return this.inputs['executor_preemptible_machines'] as boolean | undefined;
  }
  public set executorPreemptibleMachines(value: boolean | undefined) {
    this.inputs['executor_preemptible_machines'] = value;
  }
  public get executorQueueName(): string {
    return this.inputs['executor_queue_name'] as string;
  }
  public set executorQueueName(value: string) {
    this.inputs['executor_queue_name'] = value;
  }
  public get executorResourcePrefix(): string | undefined {
    return this.inputs['executor_resource_prefix'] as string | undefined;
  }
  public set executorResourcePrefix(value: string | undefined) {
    this.inputs['executor_resource_prefix'] = value;
  }
  public get executorSourcegraphExecutorProxyPassword(): string {
    return this.inputs['executor_sourcegraph_executor_proxy_password'] as string;
  }
  public set executorSourcegraphExecutorProxyPassword(value: string) {
    this.inputs['executor_sourcegraph_executor_proxy_password'] = value;
  }
  public get executorSourcegraphExternalUrl(): string {
    return this.inputs['executor_sourcegraph_external_url'] as string;
  }
  public set executorSourcegraphExternalUrl(value: string) {
    this.inputs['executor_sourcegraph_external_url'] = value;
  }
  public get executorSshAccessCidrRange(): string | undefined {
    return this.inputs['executor_ssh_access_cidr_range'] as string | undefined;
  }
  public set executorSshAccessCidrRange(value: string | undefined) {
    this.inputs['executor_ssh_access_cidr_range'] = value;
  }
  public get executorUseFirecracker(): boolean | undefined {
    return this.inputs['executor_use_firecracker'] as boolean | undefined;
  }
  public set executorUseFirecracker(value: boolean | undefined) {
    this.inputs['executor_use_firecracker'] = value;
  }
  public get permissionsBoundaryArn(): string | undefined {
    return this.inputs['permissions_boundary_arn'] as string | undefined;
  }
  public set permissionsBoundaryArn(value: string | undefined) {
    this.inputs['permissions_boundary_arn'] = value;
  }
  public get privateNetworking(): boolean | undefined {
    return this.inputs['private_networking'] as boolean | undefined;
  }
  public set privateNetworking(value: boolean | undefined) {
    this.inputs['private_networking'] = value;
  }
  public get randomizeResourceNames(): boolean | undefined {
    return this.inputs['randomize_resource_names'] as boolean | undefined;
  }
  public set randomizeResourceNames(value: boolean | undefined) {
    this.inputs['randomize_resource_names'] = value;
  }
  public get securityGroupId(): string | undefined {
    return this.inputs['security_group_id'] as string | undefined;
  }
  public set securityGroupId(value: string | undefined) {
    this.inputs['security_group_id'] = value;
  }
  protected synthesizeAttributes() {
    return this.inputs;
  }
}
