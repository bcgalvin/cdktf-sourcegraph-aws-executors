// generated by cdktf get
// sourcegraph/executors/aws//modules/executors
import { TerraformModule, TerraformModuleUserConfig } from 'cdktf';
import { Construct } from 'constructs';
export interface ExecutorsExecutorsConfig extends TerraformModuleUserConfig {
  /**
   * If false, no public IP will be associated with the executors.
   * @default true
   */
  readonly assignPublicIp?: boolean;
  /**
   * Executor node disk additional IOPS.
   * @default 3000
   */
  readonly bootDiskIops?: number;
  /**
   * Executor node disk size in GB.
   * @default 500
   */
  readonly bootDiskSize?: number;
  /**
   * Executor node disk throughput in MiB/s.
   * @default 125
   */
  readonly bootDiskThroughput?: number;
  /**
   * If provided, this docker auth config file will be used to authorize image pulls. See [Using private registries](https://docs.sourcegraph.com/admin/deploy_executors#using-private-registries) for how to configure.
   */
  readonly dockerAuthConfig?: string;
  /**
   * A URL to a docker registry mirror to use (falling back to docker.io).
   */
  readonly dockerRegistryMirror?: string;
  /**
   * A URL to a docker registry mirror node exporter to scrape (optional)
   */
  readonly dockerRegistryMirrorNodeExporterUrl?: string;
  /**
   * The amount of disk space to give to each firecracker VM
   * @default 20GB
   */
  readonly firecrackerDiskSpace?: string;
  /**
   * The amount of memory to give to each firecracker VM
   * @default 12GB
   */
  readonly firecrackerMemory?: string;
  /**
   * The number of CPUs to give to each firecracker VM
   * @default 4
   */
  readonly firecrackerNumCpus?: number;
  /**
   * DEPRECATED. This is not used anymore.
   * @default 0.0.0.0/0
   */
  readonly httpAccessCidrRange?: string;
  /**
   * A label tag to add to all the executors. Can be used for filtering out the right instances in stackdriver monitoring.
   */
  readonly instanceTag: string;
  /**
   * The amount of memory to allocate to each virtual machine or container
   * @default 12GB
   */
  readonly jobMemory?: string;
  /**
   * The number of CPUs to allocate to each virtual machine or container
   * @default 4
   */
  readonly jobNumCpus?: number;
  /**
   * The amount of jobs a single instance should have in queue. Used for autoscaling.
   * @default 360
   */
  readonly jobsPerInstanceScaling?: number;
  /**
   * Executor node machine disk image to use for creating the boot volume. Leave empty to use latest compatible with the Sourcegraph version.
   */
  readonly machineImage?: string;
  /**
   * Executor node machine type.
   * @default c5n.metal
   */
  readonly machineType?: string;
  /**
   * The maximum time that can be spent by the worker dequeueing records to be handled
   * @default 2h
   */
  readonly maxActiveTime?: string;
  /**
   * The maximum number of executor instances to run in the autoscaling group.
   * @default 1
   */
  readonly maxReplicas?: number;
  /**
   * The number of jobs to run concurrently per executor instance
   * @default 18
   */
  readonly maximumNumJobs?: number;
  /**
   * The maximum wall time that can be spent on a single job
   * @default 30m
   */
  readonly maximumRuntimePerJob?: string;
  /**
   * If provided, the default security groups will not be created. The ID of the security group to associate the Launch Template network with.
   */
  readonly metricsAccessSecurityGroupId?: string;
  /**
   * The value for environment by which to filter the custom metrics.
   */
  readonly metricsEnvironmentLabel: string;
  /**
   * The minimum number of executor instances to run in the autoscaling group.
   * @default 1
   */
  readonly minReplicas?: number;
  /**
   * The maximum number of jobs that will be dequeued by the worker
   * @default 1800
   */
  readonly numTotalJobs?: number;
  /**
   * If not provided, there will be no permissions boundary on IAM roles and users created. The ARN of a policy to use for permissions boundaries with IAM roles and users.
   */
  readonly permissionsBoundaryArn?: string;
  /**
   * Whether to use preemptible machines instead of standard machines; usually way cheaper but might be terminated at any time
   */
  readonly preemptibleMachines?: boolean;
  /**
   * The queue from which the executor should dequeue jobs.
   */
  readonly queueName: string;
  /**
   * Use randomized names for resources. Deployments using the legacy naming convention will be updated in-place with randomized names when enabled.
   */
  readonly randomizeResourceNames: boolean;
  /**
   * An optional prefix to add to all resources created.
   */
  readonly resourcePrefix?: string;
  /**
   * The shared password used to authenticate requests to the internal executor proxy.
   */
  readonly sourcegraphExecutorProxyPassword: string;
  /**
   * The externally accessible URL of the target Sourcegraph instance.
   */
  readonly sourcegraphExternalUrl: string;
  /**
   * CIDR range from where SSH access to the EC2 instances is acceptable.
   * @default 10.0.0.0/16
   */
  readonly sshAccessCidrRange?: string;
  /**
   * The ID of the subnet within the given VPC to run the instance in.
   */
  readonly subnetId: string;
  /**
   * Whether to isolate commands in virtual machines
   * @default true
   */
  readonly useFirecracker?: boolean;
  /**
   * The ID of the VPC to run the instance in.
   */
  readonly vpcId: string;
}
/**
 * Defines an ExecutorsExecutors based on a Terraform module
 *
 * Docs at Terraform Registry: {@link https://registry.terraform.io/modules/sourcegraph/executors/aws/~> 5.0.1/submodules/executors sourcegraph/executors/aws//modules/executors}
 */
export class ExecutorsExecutors extends TerraformModule {
  private readonly inputs: { [name: string]: any } = { }
  public constructor(scope: Construct, id: string, config: ExecutorsExecutorsConfig) {
    super(scope, id, {
      ...config,
      source: 'sourcegraph/executors/aws//modules/executors',
      version: '~> 5.0.1',
    });
    this.assignPublicIp = config.assignPublicIp;
    this.bootDiskIops = config.bootDiskIops;
    this.bootDiskSize = config.bootDiskSize;
    this.bootDiskThroughput = config.bootDiskThroughput;
    this.dockerAuthConfig = config.dockerAuthConfig;
    this.dockerRegistryMirror = config.dockerRegistryMirror;
    this.dockerRegistryMirrorNodeExporterUrl = config.dockerRegistryMirrorNodeExporterUrl;
    this.firecrackerDiskSpace = config.firecrackerDiskSpace;
    this.firecrackerMemory = config.firecrackerMemory;
    this.firecrackerNumCpus = config.firecrackerNumCpus;
    this.httpAccessCidrRange = config.httpAccessCidrRange;
    this.instanceTag = config.instanceTag;
    this.jobMemory = config.jobMemory;
    this.jobNumCpus = config.jobNumCpus;
    this.jobsPerInstanceScaling = config.jobsPerInstanceScaling;
    this.machineImage = config.machineImage;
    this.machineType = config.machineType;
    this.maxActiveTime = config.maxActiveTime;
    this.maxReplicas = config.maxReplicas;
    this.maximumNumJobs = config.maximumNumJobs;
    this.maximumRuntimePerJob = config.maximumRuntimePerJob;
    this.metricsAccessSecurityGroupId = config.metricsAccessSecurityGroupId;
    this.metricsEnvironmentLabel = config.metricsEnvironmentLabel;
    this.minReplicas = config.minReplicas;
    this.numTotalJobs = config.numTotalJobs;
    this.permissionsBoundaryArn = config.permissionsBoundaryArn;
    this.preemptibleMachines = config.preemptibleMachines;
    this.queueName = config.queueName;
    this.randomizeResourceNames = config.randomizeResourceNames;
    this.resourcePrefix = config.resourcePrefix;
    this.sourcegraphExecutorProxyPassword = config.sourcegraphExecutorProxyPassword;
    this.sourcegraphExternalUrl = config.sourcegraphExternalUrl;
    this.sshAccessCidrRange = config.sshAccessCidrRange;
    this.subnetId = config.subnetId;
    this.useFirecracker = config.useFirecracker;
    this.vpcId = config.vpcId;
  }
  public get assignPublicIp(): boolean | undefined {
    return this.inputs['assign_public_ip'] as boolean | undefined;
  }
  public set assignPublicIp(value: boolean | undefined) {
    this.inputs['assign_public_ip'] = value;
  }
  public get bootDiskIops(): number | undefined {
    return this.inputs['boot_disk_iops'] as number | undefined;
  }
  public set bootDiskIops(value: number | undefined) {
    this.inputs['boot_disk_iops'] = value;
  }
  public get bootDiskSize(): number | undefined {
    return this.inputs['boot_disk_size'] as number | undefined;
  }
  public set bootDiskSize(value: number | undefined) {
    this.inputs['boot_disk_size'] = value;
  }
  public get bootDiskThroughput(): number | undefined {
    return this.inputs['boot_disk_throughput'] as number | undefined;
  }
  public set bootDiskThroughput(value: number | undefined) {
    this.inputs['boot_disk_throughput'] = value;
  }
  public get dockerAuthConfig(): string | undefined {
    return this.inputs['docker_auth_config'] as string | undefined;
  }
  public set dockerAuthConfig(value: string | undefined) {
    this.inputs['docker_auth_config'] = value;
  }
  public get dockerRegistryMirror(): string | undefined {
    return this.inputs['docker_registry_mirror'] as string | undefined;
  }
  public set dockerRegistryMirror(value: string | undefined) {
    this.inputs['docker_registry_mirror'] = value;
  }
  public get dockerRegistryMirrorNodeExporterUrl(): string | undefined {
    return this.inputs['docker_registry_mirror_node_exporter_url'] as string | undefined;
  }
  public set dockerRegistryMirrorNodeExporterUrl(value: string | undefined) {
    this.inputs['docker_registry_mirror_node_exporter_url'] = value;
  }
  public get firecrackerDiskSpace(): string | undefined {
    return this.inputs['firecracker_disk_space'] as string | undefined;
  }
  public set firecrackerDiskSpace(value: string | undefined) {
    this.inputs['firecracker_disk_space'] = value;
  }
  public get firecrackerMemory(): string | undefined {
    return this.inputs['firecracker_memory'] as string | undefined;
  }
  public set firecrackerMemory(value: string | undefined) {
    this.inputs['firecracker_memory'] = value;
  }
  public get firecrackerNumCpus(): number | undefined {
    return this.inputs['firecracker_num_cpus'] as number | undefined;
  }
  public set firecrackerNumCpus(value: number | undefined) {
    this.inputs['firecracker_num_cpus'] = value;
  }
  public get httpAccessCidrRange(): string | undefined {
    return this.inputs['http_access_cidr_range'] as string | undefined;
  }
  public set httpAccessCidrRange(value: string | undefined) {
    this.inputs['http_access_cidr_range'] = value;
  }
  public get instanceTag(): string {
    return this.inputs['instance_tag'] as string;
  }
  public set instanceTag(value: string) {
    this.inputs['instance_tag'] = value;
  }
  public get jobMemory(): string | undefined {
    return this.inputs['job_memory'] as string | undefined;
  }
  public set jobMemory(value: string | undefined) {
    this.inputs['job_memory'] = value;
  }
  public get jobNumCpus(): number | undefined {
    return this.inputs['job_num_cpus'] as number | undefined;
  }
  public set jobNumCpus(value: number | undefined) {
    this.inputs['job_num_cpus'] = value;
  }
  public get jobsPerInstanceScaling(): number | undefined {
    return this.inputs['jobs_per_instance_scaling'] as number | undefined;
  }
  public set jobsPerInstanceScaling(value: number | undefined) {
    this.inputs['jobs_per_instance_scaling'] = value;
  }
  public get machineImage(): string | undefined {
    return this.inputs['machine_image'] as string | undefined;
  }
  public set machineImage(value: string | undefined) {
    this.inputs['machine_image'] = value;
  }
  public get machineType(): string | undefined {
    return this.inputs['machine_type'] as string | undefined;
  }
  public set machineType(value: string | undefined) {
    this.inputs['machine_type'] = value;
  }
  public get maxActiveTime(): string | undefined {
    return this.inputs['max_active_time'] as string | undefined;
  }
  public set maxActiveTime(value: string | undefined) {
    this.inputs['max_active_time'] = value;
  }
  public get maxReplicas(): number | undefined {
    return this.inputs['max_replicas'] as number | undefined;
  }
  public set maxReplicas(value: number | undefined) {
    this.inputs['max_replicas'] = value;
  }
  public get maximumNumJobs(): number | undefined {
    return this.inputs['maximum_num_jobs'] as number | undefined;
  }
  public set maximumNumJobs(value: number | undefined) {
    this.inputs['maximum_num_jobs'] = value;
  }
  public get maximumRuntimePerJob(): string | undefined {
    return this.inputs['maximum_runtime_per_job'] as string | undefined;
  }
  public set maximumRuntimePerJob(value: string | undefined) {
    this.inputs['maximum_runtime_per_job'] = value;
  }
  public get metricsAccessSecurityGroupId(): string | undefined {
    return this.inputs['metrics_access_security_group_id'] as string | undefined;
  }
  public set metricsAccessSecurityGroupId(value: string | undefined) {
    this.inputs['metrics_access_security_group_id'] = value;
  }
  public get metricsEnvironmentLabel(): string {
    return this.inputs['metrics_environment_label'] as string;
  }
  public set metricsEnvironmentLabel(value: string) {
    this.inputs['metrics_environment_label'] = value;
  }
  public get minReplicas(): number | undefined {
    return this.inputs['min_replicas'] as number | undefined;
  }
  public set minReplicas(value: number | undefined) {
    this.inputs['min_replicas'] = value;
  }
  public get numTotalJobs(): number | undefined {
    return this.inputs['num_total_jobs'] as number | undefined;
  }
  public set numTotalJobs(value: number | undefined) {
    this.inputs['num_total_jobs'] = value;
  }
  public get permissionsBoundaryArn(): string | undefined {
    return this.inputs['permissions_boundary_arn'] as string | undefined;
  }
  public set permissionsBoundaryArn(value: string | undefined) {
    this.inputs['permissions_boundary_arn'] = value;
  }
  public get preemptibleMachines(): boolean | undefined {
    return this.inputs['preemptible_machines'] as boolean | undefined;
  }
  public set preemptibleMachines(value: boolean | undefined) {
    this.inputs['preemptible_machines'] = value;
  }
  public get queueName(): string {
    return this.inputs['queue_name'] as string;
  }
  public set queueName(value: string) {
    this.inputs['queue_name'] = value;
  }
  public get randomizeResourceNames(): boolean {
    return this.inputs['randomize_resource_names'] as boolean;
  }
  public set randomizeResourceNames(value: boolean) {
    this.inputs['randomize_resource_names'] = value;
  }
  public get resourcePrefix(): string | undefined {
    return this.inputs['resource_prefix'] as string | undefined;
  }
  public set resourcePrefix(value: string | undefined) {
    this.inputs['resource_prefix'] = value;
  }
  public get sourcegraphExecutorProxyPassword(): string {
    return this.inputs['sourcegraph_executor_proxy_password'] as string;
  }
  public set sourcegraphExecutorProxyPassword(value: string) {
    this.inputs['sourcegraph_executor_proxy_password'] = value;
  }
  public get sourcegraphExternalUrl(): string {
    return this.inputs['sourcegraph_external_url'] as string;
  }
  public set sourcegraphExternalUrl(value: string) {
    this.inputs['sourcegraph_external_url'] = value;
  }
  public get sshAccessCidrRange(): string | undefined {
    return this.inputs['ssh_access_cidr_range'] as string | undefined;
  }
  public set sshAccessCidrRange(value: string | undefined) {
    this.inputs['ssh_access_cidr_range'] = value;
  }
  public get subnetId(): string {
    return this.inputs['subnet_id'] as string;
  }
  public set subnetId(value: string) {
    this.inputs['subnet_id'] = value;
  }
  public get useFirecracker(): boolean | undefined {
    return this.inputs['use_firecracker'] as boolean | undefined;
  }
  public set useFirecracker(value: boolean | undefined) {
    this.inputs['use_firecracker'] = value;
  }
  public get vpcId(): string {
    return this.inputs['vpc_id'] as string;
  }
  public set vpcId(value: string) {
    this.inputs['vpc_id'] = value;
  }
  protected synthesizeAttributes() {
    return this.inputs;
  }
}
